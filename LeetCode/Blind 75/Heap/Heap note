Heap

            3
           /  \
          6    8
         /
        9

-Min heap: min value at the top of the tree; children nodes are greater than the parent node
-Max Heap: max value at the top of the tree; children nodes are smaller than the parent node
-Completed tree: every level of the tree is full except the last level
-Implemented in an array; left child: 2 * i; right child: 2 * i + 1
-ex:    0     1     2     3     4
      |    |  3  |  6  |  8  |  9  |    |
     3: 1 (index)
     left child: 2 * 1 = 2 (index)
     right child 2 * 1 + 1 = 3 (index)

- Efficient data structure for inserting/removing value

-----------------------------------------
|   Operation     |    Time Complexity  |
-----------------------------------------
|     Insert      |      O(1og(n))      |
-----------------------------------------
|     Pop         |      O(1og(n))      |
-----------------------------------------
|     Min/Max     |       O(1)          |
-----------------------------------------